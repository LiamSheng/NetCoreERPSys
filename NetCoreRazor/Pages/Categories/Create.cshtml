@page

@*所需要的所有数据和可以绑定的属性，都来自于 CreateModel 类的一个实例*@
@model NetCoreRazor.Pages.Categories.CreateModel

<form method="post">
    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <h2 class="text-primary">Create Category</h2>
            <hr />
        </div>
        @*
            ModelOnly: 只显示那些不与任何特定字段相关联的“模型级别”错误.
            All: 所有字段级别的错误, 比如 DisplayOrder 字段的 [Range] 错误等.
            None: 不显示任何错误.
        *@
        <div asp-validation-summary="ModelOnly" class="text-bg-warning">asp-validation-summary</div>
        <div class="mb-3 row">
            @*
                此处的 label 标签体没有默认值, 框架会使用 Models Name 字段定义的 [DisplayName("Category Name")]
                也可以像 <label asp-for="DisplayOrder" class="p-1">Display Order</label> 硬编码
            *@
            <label asp-for="Category.Name" class="p-1"></label>
            <input asp-for="Category.Name" type="text" class="form-control" />
            <span asp-validation-for="Category.Name" class="text-danger"></span>
        </div>
        <div class="mb-3 row">
            @* 
                点击一个带有 for 属性的 <label>文本时，浏览器会自动将光标聚焦到对应的输入框中.
                这对于小小的复选框和单选按钮尤其有用，极大地扩展了用户的可点击区域. 
                屏幕阅读器等辅助技术会使用这种明确的关联.

                asp-for 是一个服务器端的“指令”, 在生成最终 HTML 的时候会自动地、智能地创建出 for 属性以及其他很多东西.
                asp-for 将显示的文本与模型的元数据绑定.
            *@
            <label asp-for="Category.DisplayOrder" class="p-1">Display Order</label>
            <input asp-for="Category.DisplayOrder" type="text" class="form-control" />
            <span asp-validation-for="Category.DisplayOrder" class="text-danger"></span>
        </div>
        <div class="row p-1">
            <div class="col-6"><button type="submit" class="btn btn-primary form-control">Create</button></div>
            <div class="col-6">
                <a asp-page="categories/index" class="btn btn-outline-dark form-control">Back to List</a>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @*
        客户端验证的局限性:
        1. 需要在 Models 类上使用数据注解来定义规则: [Range(1, 100)].
        2. 需要 <input asp-for="..."> Tag helper 生成输入框.
        3. 仅能验证上述错误, 客户端的 JavaScript 脚本对自定义业务逻辑一无所知, 无法验证.

        优点: 客户端验证通过 JS脚本, 不跳转页面 不提交请求.
    *@
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}
